  name: 'Get & Cache Dependencies'
  description: 'Get the dependencies (via npm) and cache them'
  inputs:
    cachingInput:
      description: 'Whether to cache dependencies or not'
      required: false
      default: 'true'
  outputs:
    random-number:
      description: "Random number"
      value: ${{ steps.random-number-generator.outputs.random-number }}
    used-cache:
      description: 'Whether cache was used'
      value: ${{ steps.install.outputs.cacheValue }}

  runs:
      using: 'composite'
      steps:
          - name: Random Step generator
            id: random-number-generator
            run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
            shell: bash
          - name: Cache dependencies
            if: inputs.cachingInput == 'true'
            id: cache
            uses: actions/cache@v3
            with:
                path: node_modules
                key: deps-nodes-modules-${{ hashFiles('**/package-lock.json') }}
          - name: Install dependencies
            if: steps.cache.outputs.cache-hit != 'true' || inputs.cachingInput != 'true'
            id: install
            run: |
              npm ci
              echo "cacheValue=${{ inputs.cachingInput }}" >> $GITHUB_OUTPUT
            shell: bash

